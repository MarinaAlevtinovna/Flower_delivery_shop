import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
import requests
from .bot_config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher(bot)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
menu = ReplyKeyboardMarkup(resize_keyboard=True)
menu.add(KeyboardButton("üõç –ö–∞—Ç–∞–ª–æ–≥"), KeyboardButton("üì¶ –ú–æ–∏ –∑–∞–∫–∞–∑—ã"))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=["start"])
async def start(message: types.Message):
    await message.answer("üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Flower Delivery Bot!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=menu)

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ—Ä–µ–∑ API
@dp.message_handler(lambda message: message.text == "üõç –ö–∞—Ç–∞–ª–æ–≥")
async def catalog(message: types.Message):
    response = requests.get("http://127.0.0.1:8000/api/orders/")  # –ó–∞–ø—Ä–æ—Å –∫ API
    if response.status_code == 200:
        orders = response.json()
        if not orders:
            await message.answer("‚ùå –ö–∞—Ç–∞–ª–æ–≥ –ø—É—Å—Ç!")
        else:
            text = "üå∏ **–ù–∞—à–∏ —Ç–æ–≤–∞—Ä—ã:**\n\n"
            for item in orders:
                text += f"üîπ *{item['products'][0]['name']}* - {item['products'][0]['price']} ‚ÇΩ\n"
            await message.answer(text, parse_mode="Markdown")
    else:
        await message.answer("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–∞–ª–æ–≥–∞!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def start_bot():
    executor.start_polling(dp, skip_updates=True)
